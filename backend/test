from models.base_model import BaseModel
from models.client import Client
from models.normal_client import Normal_client
from models.registered_client import Registered_client
from datetime import datetime
nc = {'email':'tekohpalma@gmail.com', 'telephone':'679800261', 'first_name':'tekoh', 'last_name':'Palma'}
rc  = {'email':'tekohpalma@gmail.com', 'telephone':'679800261', 'first_name':'tekoh', 'last_name':'Palma', 'password': "cyanide", 'diet_type' : "vegan" , "meal_preference" : "traditional", "drink_preference" : "natural"}

rcc  = {'email':'tekohpalma@gmail.com', 'telephone':'679800261', 'first_name':'tekoh', 'last_name':'Palma', 'password': "cyanide", 'diet_type' : Diet_Type.VEGAN.value, "meal_preference" : Meal_Preference.TRADITIONAL.value, "drink_preference" : Drink_Preference.NATURAL.value}

restaurant
restaurant = {"name":"Alibaba", "email":"alibaba@gmail.com", "password":"cyanide", "location":"downtown beach", "capacity":52, "type":"VIP", "status":"Closed"}




Environmental variables
DINEHUB_ENV: running environment. It can be “dev” or “test” for the moment (“production” soon!)
DINEHUB_MYSQL_USER: the username of your MySQL
DINEHUB_MYSQL_PWD: the password of your MySQL
DINEHUB_MYSQL_HOST: the hostname of your MySQL
DINEHUB_MYSQL_DB: the database name of your MySQL
DINEHUB_TYPE_STORAGE: the type of storage used. It can be “file” (using FileStorage) or db (using DBStorage) or mongo_db(using MongoDBStorage)

run in the root folder of backend
start api server with db_stroage
DINEHUB_MYSQL_PWD='dinehub_dev_pwd' DINEHUB_MYSQL_USER='dine_hub_dev' DINEHUB_TYPE_STORAGE='db' DINEHUB_MYSQL_DB='dineHub_dev_db' DINEHUB_MYSQL_HOST='localhost' python3 -m api.v1.app

start api server with fs_storage
DINEHUB_TYPE_STORAGE='fs' python3 -m api.v1.app
 
 
# api POST parameters
restaurants
{"name":"Alibaba", "email":"alibaba@gmail.com", "password":"12345", "location":"downtown beach", "capacity":52, "type":"VIP", "status":"Closed", "role":"admin", "profileImageUrl": "http://example.com/images/john.jpg"}
login
{"email":"hack@gmail.com", "password":"12345"}
verify
{"email":"tekohpalma@gmail.com"}



- give back entire user or id for restaurant
- on login give me the entire user


To do with emergency 
- endpoint to register restaurant, 
{
  "restaurantId": "r123", 
  "restaurantName": "John's Diner",
  "email": "john@example.com",
  "password": "securepassword",
  "profileImageUrl": "http://example.com/images/john.jpg",
  "role": "restaurant_owner"
}
- login {email and password}
from models.engine.file_storage import FileStorage
from models.restaurant import Restaurant
from models.normal_client import Normal_client
from models.reservation import Reservation
from models.restaurant import Restaurant

fs = FileStorage()
fs.reload()
all_states = fs.all(Normal_client)
print("All States: {}".format(len(all_states.keys())))
for state_key in all_states.keys():
    print(all_states[state_key])
    
res = Restaurant()
fs.new(rs)
fs.save()

















# new test on Relational Database
/admins 
POST
data = {
            "status": "Open",
            "email": "admin@gmail.com",
            "password": "admin",
            "first_name": "db",
            "last_name": "admin"
        }
GET

/restaurants
POST 
data = {
        "email": "HomeResto@gmail.com",
        "password": "1234",
        "name": "Home Restaurant",
        "country" : "Cameroon",
        "city" : "Bamenda",
        "state" : "North west"
}

GET

/restaurant
POST

/registered_clients
POST
  data = {
        "telephone" = 123456789
        "first_name" = "Johnson"
        "last_name" = "Mark"
        "email" = "client@gmail.com"
        "password" = "1234"
    }
  
  
/search
POST
data = {
  "country": "Cameroon",
  "state": "North West",
  "city": "Bamenda"
}


/products
POST
data = {
  "name": "Coca Cola",
  "description": "Coca Cola",
  "price": 1.0,
  "cuisine": "Coca Cola",
  "menu_id": "m123",
  "picture": "http://example.com/images/john.jpg",
  "id": "r123",
}
